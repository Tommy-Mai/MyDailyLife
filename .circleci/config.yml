version: 2.1
jobs:
  build:
    docker:
      - image: 2.5.8-stretch-node-browsers
      environment:
        # CircleCIは仮想環境を構築するので、そのときに使うデータベースを指定。
        - RAILS_ENV: 'test'
      # Mysqlのイメージを作成。
      - image: circleci/mysql:8.0.22-ram
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_ROOT_HOST: '%'
    # working_directoryでstepsを実行するディレクトリを指定。repoは、リポジトリのこと。
    working_directory: ~/repo
    # stepsは、ーザーが自由に指定できるrunコマンドとCircleCIが用意したコマンドがある。各runディレクティブは、宣言された順に実行。
    steps:
      - checkout
      # CircleCIから指定したkeyのキャッシュを読み込み。
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # checksumが変わった時は以下が使われる。
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      # bundle installのデータをキャッシュ。
      - save_cache:
          paths:
          - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # database.ymlとdatabase.yml.ciを入れ替える記述。
      - run: mv config/database.yml.ci config/database.yml
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      # RuboCop
      - run:
          name: RuboCop
          command: bundle exec rubocop
      # RSpec
      - run:
          name: RSpec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
          # RspecJunitFormatterというgemをインストールしていないとエラーになる。
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
      # CircleCiのWEB上にテスト結果を表示するための記述。テスト結果が配置されるディレクトリを指定。
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
